#! /usr/bin/env python
# __author__ = "Parisa Kianmajd"
#__version__ = "1.0.1"
# Converts list of ISA and articulations pairs to CleanTax format

import csv
import sys
import wizardParser

# Global variables
isa = {}
art = []
data = {}

def main(iFile,tFile):
    reader = []
    lines = []
    # build a dictionary that maps taxonomy ids to According_To column in the original input file
    if tFile != " ":
        for f in tFile:
            reader += csv.DictReader(open(f))
        for line in reader:
            i = line("ID").split(".")[0]
            if i not in data:
                data[i] = {}
            data[i] = line["Author"]
    for f in iFile:
        lines += csv.DictReader(open(f))
    for line in lines:
        if line["Relation"] == "ISA":
            index = line["ID2"].split(".")[0]
            if index not in isa:
                isa[index] = {}
            if line["ID2"] not in isa[index]:
                isa[index][line["ID2"]]= []
            isa[index][line["ID2"]].append(line["ID1"])
        else:
            if len(line) > 1:
                art.append([line["ID1"],line["Relation"],line["ID2"]])
    
    with sys.stdout as cFile:
        for d in isa:
            if tFile != " ":
                name = data[d]
            else:
                name = "Taxonomy" + d
            cFile.write("taxonomy " + d + " " + name + "\n")
            for i in isa[d]:
                line = "(" + i + " "
                for j in isa[d][i]:
                    line = line + j + " "
                line = line [:-1] + ")" + "\n"
                cFile.write(line)
            cFile.write("\n")
        if len(art) != 0:
            cFile.write("articulation" + "\n")
            for a in art:
                cFile.write("[" + a[0] + " " + a[1] + " " + a[2] + "]" + "\n")


# MAIN
if __name__ == '__main__':
    main(wizardParser.args.iFile, wizardParser.args.tFile)