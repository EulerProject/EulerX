#! /usr/bin/env python
# __author__ = "Parisa Kianmajd"
#__version__ = "1.0.1"
# Converts list of ISA and articulations pairs to CleanTax format

import csv
import sys
import wizardParser

# Global variables
isa = {}
art = []
data = {}


def main(tfile):
    # build a dictionary that maps taxonomy ids to According_To column in the original input file
    if tfile != " ":
        with open(tfile) as infile:
            reader = csv.reader(infile)
            #skip header row
            next(reader, None)
            for line in reader:
                i = line[0].split(".")[0]
                if i not in data:
                    data[i] = {}
                data[i] = line[1]
    with sys.stdin as source:
        lines = csv.reader(source)
        #skip header row
        next(lines, None)
        for line in lines:
            if "ISA" in line:
                index = line[-5].split(".")[0]
                if index not in isa:
                    isa[index] = {}
                if line[-5] not in isa[index]:
                    isa[index][line[-5]]= []
                isa[index][line[-5]].append(line[0])
            else:
                if len(line) > 1:
                    art.append([line[0],line[5],line[6]])
    with sys.stdout as cFile:
        for d in isa:
            if tfile != " ":
                name = data[d]
            else:
                name = "Taxonomy" + d
            cFile.write("taxonomy " + d + " " + name + "\n")
            for i in isa[d]:
                line = "(" + i + " "
                for j in isa[d][i]:
                    line = line + j + " "
                line = line [:-1] + ")" + "\n"
                cFile.write(line)
            cFile.write("\n")
        if len(art) != 0:
            cFile.write("articulation" + "\n")
            for a in art:
                cFile.write("[" + a[0] + " " + a[1] + " " + a[2] + "]" + "\n")


# MAIN
if __name__ == '__main__':
    main(wizardParser.args.tFile)