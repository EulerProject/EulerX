#!/usr/bin/env python
#import os
#import inspect
#import imp
#path = os.path.dirname(os.path.abspath(inspect.getfile(inspect.currentframe())))
#imp.load_source('parser', path + '/lib1.0/parser.py')
#imp.load_source('runner', path + '/lib1.0/runner.py')
#imp.load_source('generator', path + '/lib1.0/generator.py')
from parser import *
from runner import *
from generator import *
from externaltools import *

def main():

	elParser = EulerParser.instance()
	#ctiParser = CtiParser.instance()
	args = elParser.parse_args()
	if args.verbose:
		print args
	if args.inputfile is None:
		# artificial example generator
		if args.generateCti:
			generator = CtiGenerator.instance()
			generator.run(args)
		# input wizard
		elif args.diaglat:
			runLattice(args.diaglat)
		elif args.addID:
			runAddID(args.addID)
		elif args.addIsa:
			runAddIsa(args.addIsa)
		elif args.p2c:
			runP2C(args.p2c)
		elif args.p2ct:
			runP2CT(args.p2ct)
		elif args.addArt:
			runAddArt(args.addArt)
		elif args.addArtT:
			runAddArtT(args.addArtT)				
		# wrong argument
		else:
			print "Invalid input: -i/-g must be specified, please run euler -h for more information"
			return None
	else:
		if args.generateCti is False:
			if not reasoner.has_key(args.reasoner):
				print "unknown reasoner "+args.reasoner#+", please choose one reasoner from "+reasoner.keys().toString()
				return None
			elRunner = EulerRunner.instance()
			elRunner.run(args)
		else:
			print "Invalid input: -i/-g cannot be both specified, please run euler -h for more information"
			return None

if __name__ == '__main__':
	#start_time = time.time()
	main()
	#print "\n===> Execution time: " + (time.time() - start_time).__str__() + " seconds\n"
	
