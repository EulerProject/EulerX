#!/usr/bin/env python
#import os
#import inspect
#import imp
#path = os.path.dirname(os.path.abspath(inspect.getfile(inspect.currentframe())))
#imp.load_source('parser', path + '/lib1.0/parser.py')
#imp.load_source('runner', path + '/lib1.0/runner.py')
#imp.load_source('generator', path + '/lib1.0/generator.py')
from parser import *
from runner import *
from generator import *

def main():

	elParser = EulerParser.instance()
	ctiParser = CtiParser.instance()
	args = elParser.parse_args()
	if args.verbose:
		print args
	if args.inputfile is None:
		if args.generateCti is False:
			print "Invalid input: -i/-g must be specified, please run euler -h for more information"
			return None
		else:
			generator = CtiGenerator.instance()
			generator.run(args)
	else:
		if args.generateCti is False:
			if not reasoner.has_key(args.reasoner):
				print "unknown reasoner "+args.reasoner#+", please choose one reasoner from "+reasoner.keys().toString()
				return None
			elRunner = EulerRunner.instance()
			elRunner.run(args)
		else:
			print "Invalid input: -i/-g cannot be both specified, please run euler -h for more information"
			return None

if __name__ == '__main__':
	start_time = time.time()
	main()
	print "\n===> Execution time: " + (time.time() - start_time).__str__() + " seconds\n"
	