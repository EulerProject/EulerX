============================== Prover9 ===============================
Prover9 (64) version 2009-02A, February 2009.
Process 29249 was started by michen on lore,
Wed Jul 11 22:44:55 2012
The command was "prover9 -t 10 -f output/abstract2/abstract2N_C_D_is_included_in_2.CD_1.B_implied_Prover.txt".
============================== end of head ===========================

============================== INPUT =================================

% Reading from file output/abstract2/abstract2N_C_D_is_included_in_2.CD_1.B_implied_Prover.txt


formulas(assumptions).
1_B(x) -> 1_A(x).
1_C(x) -> 1_B(x).
1_D(x) -> 1_B(x).
1_E(x) -> 1_B(x).
1_F(x) -> 1_A(x).
1_G(x) -> 1_F(x).
1_H(x) -> 1_F(x).
2_B(x) -> 2_A(x).
2_CD(x) -> 2_B(x).
2_E(x) -> 2_B(x).
2_F(x) -> 2_A(x).
2_GH(x) -> 2_F(x).
(all x (1_B(x) <-> 2_B(x))) | (all x (2_B(x) -> 1_B(x))) & (exists x (1_B(x) & -2_B(x))).
(exists x 1_A(x)).
(exists x 1_C(x)).
(exists x 1_B(x)).
(exists x 1_E(x)).
(exists x 1_D(x)).
(exists x 1_G(x)).
(exists x 1_F(x)).
(exists x 1_H(x)).
(exists x 2_A(x)).
(exists x 2_B(x)).
(exists x 2_E(x)).
(exists x 2_F(x)).
(exists x 2_CD(x)).
(exists x 2_GH(x)).
1_A(x) -> 1_B(x) | 1_F(x).
1_B(x) -> 1_C(x) | 1_D(x) | 1_E(x).
1_F(x) -> 1_G(x) | 1_H(x).
2_A(x) -> 2_B(x) | 2_F(x).
2_B(x) -> 2_CD(x) | 2_E(x).
2_F(x) -> 2_GH(x).
(all x (1_F(x) -> -1_B(x))).
(all x (1_D(x) -> -1_C(x))).
(all x (1_E(x) -> -1_C(x))).
(all x (1_E(x) -> -1_D(x))).
(all x (1_H(x) -> -1_G(x))).
(all x (2_F(x) -> -2_B(x))).
(all x (2_E(x) -> -2_CD(x))).
end_of_list.

formulas(goals).
(all x (2_CD(x) -> 1_B(x))) & (exists x (1_B(x) & -2_CD(x))).
end_of_list.

============================== end of input ==========================

% From the command line: assign(max_seconds, 10).

============================== PROCESS NON-CLAUSAL FORMULAS ==========

% Formulas that are not ordinary clauses:
1 1_B(x) -> 1_A(x) # label(non_clause).  [assumption].
2 1_C(x) -> 1_B(x) # label(non_clause).  [assumption].
3 1_D(x) -> 1_B(x) # label(non_clause).  [assumption].
4 1_E(x) -> 1_B(x) # label(non_clause).  [assumption].
5 1_F(x) -> 1_A(x) # label(non_clause).  [assumption].
6 1_G(x) -> 1_F(x) # label(non_clause).  [assumption].
7 1_H(x) -> 1_F(x) # label(non_clause).  [assumption].
8 2_B(x) -> 2_A(x) # label(non_clause).  [assumption].
9 2_CD(x) -> 2_B(x) # label(non_clause).  [assumption].
10 2_E(x) -> 2_B(x) # label(non_clause).  [assumption].
11 2_F(x) -> 2_A(x) # label(non_clause).  [assumption].
12 2_GH(x) -> 2_F(x) # label(non_clause).  [assumption].
13 (all x (1_B(x) <-> 2_B(x))) | (all x (2_B(x) -> 1_B(x))) & (exists x (1_B(x) & -2_B(x))) # label(non_clause).  [assumption].
14 (exists x 1_A(x)) # label(non_clause).  [assumption].
15 (exists x 1_C(x)) # label(non_clause).  [assumption].
16 (exists x 1_B(x)) # label(non_clause).  [assumption].
17 (exists x 1_E(x)) # label(non_clause).  [assumption].
18 (exists x 1_D(x)) # label(non_clause).  [assumption].
19 (exists x 1_G(x)) # label(non_clause).  [assumption].
20 (exists x 1_F(x)) # label(non_clause).  [assumption].
21 (exists x 1_H(x)) # label(non_clause).  [assumption].
22 (exists x 2_A(x)) # label(non_clause).  [assumption].
23 (exists x 2_B(x)) # label(non_clause).  [assumption].
24 (exists x 2_E(x)) # label(non_clause).  [assumption].
25 (exists x 2_F(x)) # label(non_clause).  [assumption].
26 (exists x 2_CD(x)) # label(non_clause).  [assumption].
27 (exists x 2_GH(x)) # label(non_clause).  [assumption].
28 1_A(x) -> 1_B(x) | 1_F(x) # label(non_clause).  [assumption].
29 1_B(x) -> 1_C(x) | 1_D(x) | 1_E(x) # label(non_clause).  [assumption].
30 1_F(x) -> 1_G(x) | 1_H(x) # label(non_clause).  [assumption].
31 2_A(x) -> 2_B(x) | 2_F(x) # label(non_clause).  [assumption].
32 2_B(x) -> 2_CD(x) | 2_E(x) # label(non_clause).  [assumption].
33 2_F(x) -> 2_GH(x) # label(non_clause).  [assumption].
34 (all x (1_F(x) -> -1_B(x))) # label(non_clause).  [assumption].
35 (all x (1_D(x) -> -1_C(x))) # label(non_clause).  [assumption].
36 (all x (1_E(x) -> -1_C(x))) # label(non_clause).  [assumption].
37 (all x (1_E(x) -> -1_D(x))) # label(non_clause).  [assumption].
38 (all x (1_H(x) -> -1_G(x))) # label(non_clause).  [assumption].
39 (all x (2_F(x) -> -2_B(x))) # label(non_clause).  [assumption].
40 (all x (2_E(x) -> -2_CD(x))) # label(non_clause).  [assumption].
41 (all x (2_CD(x) -> 1_B(x))) & (exists x (1_B(x) & -2_CD(x))) # label(non_clause) # label(goal).  [goal].

============================== end of process non-clausal formulas ===

============================== PROCESS INITIAL CLAUSES ===============

% Clauses before input processing:

formulas(usable).
end_of_list.

formulas(sos).
-1_B(x) | 1_A(x).  [clausify(1)].
-1_C(x) | 1_B(x).  [clausify(2)].
-1_D(x) | 1_B(x).  [clausify(3)].
-1_E(x) | 1_B(x).  [clausify(4)].
-1_F(x) | 1_A(x).  [clausify(5)].
-1_G(x) | 1_F(x).  [clausify(6)].
-1_H(x) | 1_F(x).  [clausify(7)].
-2_B(x) | 2_A(x).  [clausify(8)].
-2_CD(x) | 2_B(x).  [clausify(9)].
-2_E(x) | 2_B(x).  [clausify(10)].
-2_F(x) | 2_A(x).  [clausify(11)].
-2_GH(x) | 2_F(x).  [clausify(12)].
-1_B(x) | 2_B(x) | -2_B(y) | 1_B(y).  [clausify(13)].
-1_B(x) | 2_B(x) | 1_B(c1).  [clausify(13)].
-1_B(x) | 2_B(x) | -2_B(c1).  [clausify(13)].
1_B(x) | -2_B(x) | -2_B(y) | 1_B(y).  [clausify(13)].
1_B(x) | -2_B(x) | 1_B(c1).  [clausify(13)].
1_B(x) | -2_B(x) | -2_B(c1).  [clausify(13)].
1_A(c2).  [clausify(14)].
1_C(c3).  [clausify(15)].
1_B(c4).  [clausify(16)].
1_E(c5).  [clausify(17)].
1_D(c6).  [clausify(18)].
1_G(c7).  [clausify(19)].
1_F(c8).  [clausify(20)].
1_H(c9).  [clausify(21)].
2_A(c10).  [clausify(22)].
2_B(c11).  [clausify(23)].
2_E(c12).  [clausify(24)].
2_F(c13).  [clausify(25)].
2_CD(c14).  [clausify(26)].
2_GH(c15).  [clausify(27)].
-1_A(x) | 1_B(x) | 1_F(x).  [clausify(28)].
-1_B(x) | 1_C(x) | 1_D(x) | 1_E(x).  [clausify(29)].
-1_F(x) | 1_G(x) | 1_H(x).  [clausify(30)].
-2_A(x) | 2_B(x) | 2_F(x).  [clausify(31)].
-2_B(x) | 2_CD(x) | 2_E(x).  [clausify(32)].
-2_F(x) | 2_GH(x).  [clausify(33)].
-1_F(x) | -1_B(x).  [clausify(34)].
-1_D(x) | -1_C(x).  [clausify(35)].
-1_E(x) | -1_C(x).  [clausify(36)].
-1_E(x) | -1_D(x).  [clausify(37)].
-1_H(x) | -1_G(x).  [clausify(38)].
-2_F(x) | -2_B(x).  [clausify(39)].
-2_E(x) | -2_CD(x).  [clausify(40)].
2_CD(c16) | -1_B(x) | 2_CD(x).  [deny(41)].
-1_B(c16) | -1_B(x) | 2_CD(x).  [deny(41)].
end_of_list.

formulas(demodulators).
end_of_list.

============================== PREDICATE ELIMINATION =================

Eliminating 1_A/1
42 -1_A(x) | 1_B(x) | 1_F(x).  [clausify(28)].
43 -1_B(x) | 1_A(x).  [clausify(1)].
44 -1_F(x) | 1_A(x).  [clausify(5)].
45 1_A(c2).  [clausify(14)].
Derived: 1_B(c2) | 1_F(c2).  [resolve(42,a,45,a)].

Eliminating 1_C/1
46 1_C(c3).  [clausify(15)].
47 -1_C(x) | 1_B(x).  [clausify(2)].
Derived: 1_B(c3).  [resolve(46,a,47,a)].
48 -1_B(x) | 1_C(x) | 1_D(x) | 1_E(x).  [clausify(29)].
49 -1_D(x) | -1_C(x).  [clausify(35)].
Derived: -1_D(c3).  [resolve(49,b,46,a)].
50 -1_E(x) | -1_C(x).  [clausify(36)].
Derived: -1_E(c3).  [resolve(50,b,46,a)].

Eliminating 1_D/1
51 1_D(c6).  [clausify(18)].
52 -1_D(x) | 1_B(x).  [clausify(3)].
Derived: 1_B(c6).  [resolve(51,a,52,a)].
53 -1_E(x) | -1_D(x).  [clausify(37)].
Derived: -1_E(c6).  [resolve(53,b,51,a)].
54 -1_D(c3).  [resolve(49,b,46,a)].

Eliminating 1_E/1
55 1_E(c5).  [clausify(17)].
56 -1_E(x) | 1_B(x).  [clausify(4)].
Derived: 1_B(c5).  [resolve(55,a,56,a)].
57 -1_E(c3).  [resolve(50,b,46,a)].
58 -1_E(c6).  [resolve(53,b,51,a)].

Eliminating 1_G/1
59 1_G(c7).  [clausify(19)].
60 -1_G(x) | 1_F(x).  [clausify(6)].
Derived: 1_F(c7).  [resolve(59,a,60,a)].
61 -1_F(x) | 1_G(x) | 1_H(x).  [clausify(30)].
62 -1_H(x) | -1_G(x).  [clausify(38)].
Derived: -1_H(c7).  [resolve(62,b,59,a)].

Eliminating 1_H/1
63 1_H(c9).  [clausify(21)].
64 -1_H(x) | 1_F(x).  [clausify(7)].
Derived: 1_F(c9).  [resolve(63,a,64,a)].
65 -1_H(c7).  [resolve(62,b,59,a)].

Eliminating 2_A/1
66 -2_A(x) | 2_B(x) | 2_F(x).  [clausify(31)].
67 -2_B(x) | 2_A(x).  [clausify(8)].
68 -2_F(x) | 2_A(x).  [clausify(11)].
69 2_A(c10).  [clausify(22)].
Derived: 2_B(c10) | 2_F(c10).  [resolve(66,a,69,a)].

Eliminating 2_E/1
70 2_E(c12).  [clausify(24)].
71 -2_E(x) | 2_B(x).  [clausify(10)].
Derived: 2_B(c12).  [resolve(70,a,71,a)].
72 -2_B(x) | 2_CD(x) | 2_E(x).  [clausify(32)].
73 -2_E(x) | -2_CD(x).  [clausify(40)].
Derived: -2_CD(c12).  [resolve(73,a,70,a)].

Eliminating 2_GH/1
74 2_GH(c15).  [clausify(27)].
75 -2_GH(x) | 2_F(x).  [clausify(12)].
Derived: 2_F(c15).  [resolve(74,a,75,a)].
76 -2_F(x) | 2_GH(x).  [clausify(33)].

Eliminating 1_F/1
77 -1_F(x) | -1_B(x).  [clausify(34)].
78 1_F(c8).  [clausify(20)].
Derived: -1_B(c8).  [resolve(77,a,78,a)].
79 1_B(c2) | 1_F(c2).  [resolve(42,a,45,a)].
80 1_F(c7).  [resolve(59,a,60,a)].
Derived: -1_B(c7).  [resolve(80,a,77,a)].
81 1_F(c9).  [resolve(63,a,64,a)].
Derived: -1_B(c9).  [resolve(81,a,77,a)].

Eliminating 2_F/1
82 -2_F(x) | -2_B(x).  [clausify(39)].
83 2_F(c13).  [clausify(25)].
Derived: -2_B(c13).  [resolve(82,a,83,a)].
84 2_B(c10) | 2_F(c10).  [resolve(66,a,69,a)].
85 2_F(c15).  [resolve(74,a,75,a)].
Derived: -2_B(c15).  [resolve(85,a,82,a)].

============================== end predicate elimination =============

Auto_denials:  (non-Horn, no changes).

Term ordering decisions:
Predicate symbol precedence:  predicate_order([ 1_B, 2_B, 2_CD ]).
Function symbol precedence:  function_order([ c1, c3, c4, c5, c6, c7, c8, c9, c11, c12, c13, c14, c15, c16 ]).
After inverse_order:  (no changes).
Unfolding symbols: (none).

Auto_inference settings:
  % set(binary_resolution).  % (non-Horn)
  % set(neg_ur_resolution).  % (non-Horn, less than 100 clauses)

Auto_process settings:
  % set(factor).  % (non-Horn)
  % set(unit_deletion).  % (non-Horn)

kept:      86 -2_CD(x) | 2_B(x).  [clausify(9)].
kept:      87 -1_B(x) | 2_B(x) | -2_B(y) | 1_B(y).  [clausify(13)].
kept:      88 -1_B(x) | 2_B(x) | 1_B(c1).  [clausify(13)].
kept:      89 -1_B(x) | 2_B(x) | -2_B(c1).  [clausify(13)].
kept:      90 1_B(x) | -2_B(x) | -2_B(y) | 1_B(y).  [clausify(13)].
kept:      91 1_B(x) | -2_B(x) | 1_B(c1).  [clausify(13)].
kept:      92 1_B(x) | -2_B(x) | -2_B(c1).  [clausify(13)].
kept:      93 1_B(c4).  [clausify(16)].
kept:      94 2_B(c11).  [clausify(23)].
kept:      95 2_CD(c14).  [clausify(26)].
kept:      96 2_CD(c16) | -1_B(x) | 2_CD(x).  [deny(41)].
kept:      97 -1_B(c16) | -1_B(x) | 2_CD(x).  [deny(41)].
kept:      98 1_B(c3).  [resolve(46,a,47,a)].
kept:      99 1_B(c6).  [resolve(51,a,52,a)].
kept:      100 1_B(c5).  [resolve(55,a,56,a)].
kept:      101 2_B(c12).  [resolve(70,a,71,a)].
kept:      102 -2_CD(c12).  [resolve(73,a,70,a)].
kept:      103 -1_B(c8).  [resolve(77,a,78,a)].
kept:      104 -1_B(c7).  [resolve(80,a,77,a)].
kept:      105 -1_B(c9).  [resolve(81,a,77,a)].
kept:      106 -2_B(c13).  [resolve(82,a,83,a)].
kept:      107 -2_B(c15).  [resolve(85,a,82,a)].
kept:      108 1_B(x) | -2_B(x).  [factor(90,a,d),merge(c)].
kept:      109 2_CD(c16) | -1_B(c16).  [factor(96,a,c)].

============================== end of process initial clauses ========

============================== CLAUSES FOR SEARCH ====================

% Clauses after input processing:

formulas(usable).
end_of_list.

formulas(sos).
86 -2_CD(x) | 2_B(x).  [clausify(9)].
88 -1_B(x) | 2_B(x) | 1_B(c1).  [clausify(13)].
89 -1_B(x) | 2_B(x) | -2_B(c1).  [clausify(13)].
93 1_B(c4).  [clausify(16)].
94 2_B(c11).  [clausify(23)].
95 2_CD(c14).  [clausify(26)].
96 2_CD(c16) | -1_B(x) | 2_CD(x).  [deny(41)].
97 -1_B(c16) | -1_B(x) | 2_CD(x).  [deny(41)].
98 1_B(c3).  [resolve(46,a,47,a)].
99 1_B(c6).  [resolve(51,a,52,a)].
100 1_B(c5).  [resolve(55,a,56,a)].
101 2_B(c12).  [resolve(70,a,71,a)].
102 -2_CD(c12).  [resolve(73,a,70,a)].
103 -1_B(c8).  [resolve(77,a,78,a)].
104 -1_B(c7).  [resolve(80,a,77,a)].
105 -1_B(c9).  [resolve(81,a,77,a)].
106 -2_B(c13).  [resolve(82,a,83,a)].
107 -2_B(c15).  [resolve(85,a,82,a)].
108 1_B(x) | -2_B(x).  [factor(90,a,d),merge(c)].
109 2_CD(c16) | -1_B(c16).  [factor(96,a,c)].
end_of_list.

formulas(demodulators).
end_of_list.

============================== end of clauses for search =============

============================== SEARCH ================================

% Starting search at 0.01 seconds.

given #1 (I,wt=4): 86 -2_CD(x) | 2_B(x).  [clausify(9)].

given #2 (I,wt=6): 88 -1_B(x) | 2_B(x) | 1_B(c1).  [clausify(13)].

given #3 (I,wt=6): 89 -1_B(x) | 2_B(x) | -2_B(c1).  [clausify(13)].

given #4 (I,wt=2): 93 1_B(c4).  [clausify(16)].

given #5 (I,wt=2): 94 2_B(c11).  [clausify(23)].

given #6 (I,wt=2): 95 2_CD(c14).  [clausify(26)].

given #7 (I,wt=6): 96 2_CD(c16) | -1_B(x) | 2_CD(x).  [deny(41)].

given #8 (I,wt=6): 97 -1_B(c16) | -1_B(x) | 2_CD(x).  [deny(41)].

given #9 (I,wt=2): 98 1_B(c3).  [resolve(46,a,47,a)].

given #10 (I,wt=2): 99 1_B(c6).  [resolve(51,a,52,a)].

given #11 (I,wt=2): 100 1_B(c5).  [resolve(55,a,56,a)].

given #12 (I,wt=2): 101 2_B(c12).  [resolve(70,a,71,a)].

given #13 (I,wt=2): 102 -2_CD(c12).  [resolve(73,a,70,a)].

given #14 (I,wt=2): 103 -1_B(c8).  [resolve(77,a,78,a)].

given #15 (I,wt=2): 104 -1_B(c7).  [resolve(80,a,77,a)].

given #16 (I,wt=2): 105 -1_B(c9).  [resolve(81,a,77,a)].

given #17 (I,wt=2): 106 -2_B(c13).  [resolve(82,a,83,a)].

given #18 (I,wt=2): 107 -2_B(c15).  [resolve(85,a,82,a)].

given #19 (I,wt=4): 108 1_B(x) | -2_B(x).  [factor(90,a,d),merge(c)].

given #20 (I,wt=4): 109 2_CD(c16) | -1_B(c16).  [factor(96,a,c)].

given #21 (A,wt=4): 110 2_B(c4) | 1_B(c1).  [resolve(93,a,88,a)].

given #22 (F,wt=2): 123 -2_CD(c13).  [ur(86,b,106,a)].

given #23 (F,wt=2): 124 -2_CD(c15).  [ur(86,b,107,a)].

given #24 (F,wt=2): 127 -2_B(c9).  [ur(108,a,105,a)].

given #25 (F,wt=2): 128 -2_B(c7).  [ur(108,a,104,a)].

given #26 (T,wt=2): 111 2_B(c14).  [resolve(95,a,86,a)].

given #27 (T,wt=2): 125 1_B(c12).  [resolve(108,b,101,a)].

given #28 (T,wt=2): 126 1_B(c11).  [resolve(108,b,94,a)].

given #29 (T,wt=2): 132 1_B(c14).  [resolve(111,a,108,b)].

given #30 (A,wt=4): 116 2_B(c3) | 1_B(c1).  [resolve(98,a,88,a)].

given #31 (F,wt=2): 129 -2_B(c8).  [ur(108,a,103,a)].

given #32 (F,wt=2): 130 -2_CD(c9).  [ur(86,b,127,a)].

given #33 (F,wt=2): 131 -2_CD(c7).  [ur(86,b,128,a)].

given #34 (F,wt=2): 133 -1_B(c16).  [resolve(125,a,97,b),unit_del(b,102)].

given #35 (T,wt=2): 134 2_CD(c16).  [resolve(125,a,96,b),unit_del(b,102)].

============================== PROOF =================================

% Proof 1 at 0.01 (+ 0.00) seconds.
% Length of proof is 21.
% Level of proof is 6.
% Maximum clause weight is 8.
% Given clauses 35.

9 2_CD(x) -> 2_B(x) # label(non_clause).  [assumption].
10 2_E(x) -> 2_B(x) # label(non_clause).  [assumption].
13 (all x (1_B(x) <-> 2_B(x))) | (all x (2_B(x) -> 1_B(x))) & (exists x (1_B(x) & -2_B(x))) # label(non_clause).  [assumption].
24 (exists x 2_E(x)) # label(non_clause).  [assumption].
40 (all x (2_E(x) -> -2_CD(x))) # label(non_clause).  [assumption].
41 (all x (2_CD(x) -> 1_B(x))) & (exists x (1_B(x) & -2_CD(x))) # label(non_clause) # label(goal).  [goal].
70 2_E(c12).  [clausify(24)].
71 -2_E(x) | 2_B(x).  [clausify(10)].
73 -2_E(x) | -2_CD(x).  [clausify(40)].
86 -2_CD(x) | 2_B(x).  [clausify(9)].
90 1_B(x) | -2_B(x) | -2_B(y) | 1_B(y).  [clausify(13)].
96 2_CD(c16) | -1_B(x) | 2_CD(x).  [deny(41)].
97 -1_B(c16) | -1_B(x) | 2_CD(x).  [deny(41)].
101 2_B(c12).  [resolve(70,a,71,a)].
102 -2_CD(c12).  [resolve(73,a,70,a)].
108 1_B(x) | -2_B(x).  [factor(90,a,d),merge(c)].
125 1_B(c12).  [resolve(108,b,101,a)].
133 -1_B(c16).  [resolve(125,a,97,b),unit_del(b,102)].
134 2_CD(c16).  [resolve(125,a,96,b),unit_del(b,102)].
136 -2_B(c16).  [ur(108,a,133,a)].
137 $F.  [resolve(134,a,86,a),unit_del(a,136)].

============================== end of proof ==========================

============================== STATISTICS ============================

Given=35. Generated=62. Kept=51. proofs=1.
Usable=32. Sos=4. Demods=0. Limbo=0, Disabled=81. Hints=0.
Kept_by_rule=0, Deleted_by_rule=0.
Forward_subsumed=10. Back_subsumed=15.
Sos_limit_deleted=0. Sos_displaced=0. Sos_removed=0.
New_demodulators=0 (0 lex), Back_demodulated=0. Back_unit_deleted=0.
Demod_attempts=0. Demod_rewrites=0.
Res_instance_prunes=0. Para_instance_prunes=0. Basic_paramod_prunes=0.
Nonunit_fsub_feature_tests=4. Nonunit_bsub_feature_tests=38.
Megabytes=0.15.
User_CPU=0.01, System_CPU=0.00, Wall_clock=0.

============================== end of statistics =====================

============================== end of search =========================

THEOREM PROVED

Exiting with 1 proof.

Process 29249 exit (max_proofs) Wed Jul 11 22:44:55 2012
